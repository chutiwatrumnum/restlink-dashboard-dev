// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô axios instances ‡∏ï‡πà‡∏≤‡∏á‡πÜ
import { axiosMain, axiosSecondary, axiosLocation, locationServices, getAxiosInstance } from '../configs';

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ axios ‡∏´‡∏•‡∏±‡∏Å (main)
export const useMainApi = async () => {
  try {
    // ‡πÉ‡∏ä‡πâ axios ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö API ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    const response = await axiosMain.get('/users');
    console.log('üì° Main API response:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå Main API error:', error);
    throw error;
  }
};

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ axios secondary (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô base URL ‡∏ï‡∏≤‡∏° path)
export const useSecondaryApi = async () => {
  try {
    // ‡πÉ‡∏ä‡πâ axios secondary ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô base URL ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    const response = await axiosSecondary.get('/projects');
    console.log('üì° Secondary API response:', response.data);
    return response.data;
  } catch (error) {
    console.error('‚ùå Secondary API error:', error);
    throw error;
  }
};

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ axios location (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö location services)
export const useLocationApi = async (unitID: number) => {
  try {
    // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ axios instance ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    const response = await axiosLocation.get(`/address/${unitID}`);
    console.log('üó∫Ô∏è Location API response:', response.data);
    
    // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ helper functions
    const addressData = await locationServices.getAddress(unitID);
    console.log('üó∫Ô∏è Address data:', addressData);
    
    return addressData;
  } catch (error) {
    console.error('‚ùå Location API error:', error);
    throw error;
  }
};

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 4: ‡πÉ‡∏ä‡πâ getAxiosInstance ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å axios instance ‡πÅ‡∏ö‡∏ö dynamic
export const useDynamicApi = async (apiType: 'main' | 'secondary' | 'location', endpoint: string) => {
  try {
    const axiosInstance = getAxiosInstance(apiType);
    const response = await axiosInstance.get(endpoint);
    console.log(`üì° ${apiType} API response:`, response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå ${apiType} API error:`, error);
    throw error;
  }
};

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 5: ‡∏Å‡∏≤‡∏£ POST ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• location
export const postLocationData = async (locationData: any) => {
  try {
    // ‡πÉ‡∏ä‡πâ location services helper
    const result = await locationServices.postLocation(locationData);
    console.log('‚úÖ Location posted successfully:', result);
    return result;
  } catch (error) {
    console.error('‚ùå Error posting location:', error);
    throw error;
  }
};

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà 6: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô React Component
export const useAxiosInComponent = () => {
  const fetchData = async () => {
    try {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
      
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
      const mainData = await useMainApi();
      
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô base URL ‡∏ï‡∏≤‡∏° path
      const secondaryData = await useSecondaryApi();
      
      // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• location ‡πÄ‡∏â‡∏û‡∏≤‡∏∞
      if (window.location.pathname.includes('add-location')) {
        const locationData = await useLocationApi(123);
        console.log('üìç Location data fetched:', locationData);
      }
      
      return { mainData, secondaryData };
    } catch (error) {
      console.error('‚ùå Error fetching data:', error);
    }
  };

  return { fetchData };
}; 